version: "3.8"

services:
  python-interview:
    build: .
    container_name: python-interview-handbook
    volumes:
      # Mount the current directory to /app for development
      - .:/app
      # Mount a named volume for pip cache
      - pip-cache:/root/.cache/pip
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
    working_dir: /app
    depends_on:
      - redis
    # Override the default command to keep container running
    command: tail -f /dev/null
    # Uncomment the following lines if you want to run a specific example
    # command: python 01-core-language-and-api-design/01-GIL/cpu_bound_example.py

  redis:
    image: redis:7-alpine
    container_name: python-interview-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  rq-worker:
    build: .
    container_name: python-interview-rq-worker
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
    working_dir: /app/02-performance-caching-scale/03-task-queues
    depends_on:
      redis:
        condition: service_healthy
    # Start RQ worker listening on high, default, and low priority queues
    command: rq worker high default low --url redis://redis:6379/0 --with-scheduler
    restart: unless-stopped

  streaming-api:
    build:
      context: ./02-performance-caching-scale/04-streaming-chunked-responses
      dockerfile: Dockerfile
    container_name: python-interview-streaming-api
    volumes:
      # Mount only the streaming examples directory for development
      - ./02-performance-caching-scale/04-streaming-chunked-responses:/app
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    # Start FastAPI server with hot reload for development
    command: uvicorn streaming_examples:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

volumes:
  pip-cache:
  redis-data:
